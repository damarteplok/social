basePath: /v1
definitions:
  main.CreatePembuatanMediaBeritaTechnologyPayload:
    properties:
      variables:
        additionalProperties:
          type: string
        type: object
    type: object
  main.CreatePostPayload:
    properties:
      content:
        maxLength: 1000
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        maxLength: 100
        type: string
    required:
    - content
    - title
    type: object
  main.CreateProcessInstancePayload:
    properties:
      awaitCompletion:
        type: boolean
      fetchVariables:
        items:
          type: string
        type: array
      operationReference:
        type: integer
      processDefinitionKey:
        type: integer
      requestTimeout:
        type: integer
      startInstructions:
        items:
          $ref: '#/definitions/main.StartInstruction'
        type: array
      tenantId:
        type: string
      variables:
        additionalProperties:
          type: string
        type: object
    required:
    - processDefinitionKey
    type: object
  main.CreateProcessInstancesResponse:
    properties:
      processDefinitionId:
        type: string
      processDefinitionKey:
        type: integer
      processDefinitionVersion:
        type: integer
      processInstanceKey:
        type: integer
      tenantId:
        type: string
      variables:
        additionalProperties:
          type: string
        type: object
    type: object
  main.CreateUserTokenPayload:
    properties:
      email:
        maxLength: 255
        type: string
      password:
        maxLength: 72
        minLength: 3
        type: string
    required:
    - email
    - password
    type: object
  main.CrudPayload:
    properties:
      process_definition_key:
        type: integer
      process_name:
        maxLength: 255
        type: string
      resource_name:
        maxLength: 255
        type: string
      version:
        type: integer
    required:
    - process_definition_key
    - process_name
    - resource_name
    - version
    type: object
  main.DataStorePembuatanMediaBeritaTechnologyWrapper:
    properties:
      data:
        $ref: '#/definitions/store.PembuatanMediaBeritaTechnology'
      message:
        type: string
      status:
        type: integer
    type: object
  main.DataStorePostWrapper:
    properties:
      data:
        $ref: '#/definitions/store.Post'
    type: object
  main.DataStoreUserWrapper:
    properties:
      data:
        $ref: '#/definitions/store.User'
    type: object
  main.DeployBpmnPayload:
    properties:
      form_resources:
        items:
          type: string
        minItems: 0
        type: array
      resource_name:
        type: string
    required:
    - resource_name
    type: object
  main.Filter:
    properties:
      assignee:
        type: string
      candidateGroup:
        type: string
      candidateUser:
        type: string
      elementId:
        type: string
      key:
        type: integer
      processDefinitionId:
        type: string
      processDefinitionKey:
        type: integer
      processInstanceKey:
        type: integer
      state:
        type: string
      tenantIds:
        type: string
      variables:
        items:
          $ref: '#/definitions/main.Variable'
        type: array
    type: object
  main.HealthResponse:
    properties:
      env:
        type: string
      status:
        type: string
      version:
        type: string
    type: object
  main.Page:
    properties:
      from:
        type: integer
      limit:
        type: integer
      searchAfter:
        items:
          $ref: '#/definitions/main.SearchAfterPayload'
        type: array
      searchBefore:
        items:
          $ref: '#/definitions/main.SearchAfterPayload'
        type: array
    type: object
  main.QueryUserTaskPayload:
    properties:
      filter:
        $ref: '#/definitions/main.Filter'
      page:
        $ref: '#/definitions/main.Page'
      sort:
        items:
          $ref: '#/definitions/main.Sort'
        type: array
    type: object
  main.RegisterUserPayload:
    properties:
      email:
        maxLength: 255
        type: string
      password:
        maxLength: 72
        minLength: 3
        type: string
      username:
        maxLength: 100
        type: string
    required:
    - email
    - password
    - username
    type: object
  main.SearchAfterPayload:
    properties:
      object:
        items: {}
        type: array
    type: object
  main.SearchTaskListPayload:
    properties:
      assgined:
        type: boolean
      assignee:
        type: string
      assignees:
        items:
          type: string
        type: array
      candidateGroup:
        type: string
      candidateGroups:
        items:
          type: string
        type: array
      candidateUser:
        type: string
      candidateUsers:
        items:
          type: string
        type: array
      pageSize:
        type: integer
      processDefinitionKey:
        type: string
      processInstanceKey:
        type: string
      searchAfter:
        items:
          type: string
        type: array
      searchAfterOrEqual:
        items:
          type: string
        type: array
      searchBefore:
        items:
          type: string
        type: array
      searchBeforeOrEqual:
        items:
          type: string
        type: array
      sort:
        items:
          $ref: '#/definitions/main.SortSearchTasklist'
        type: array
      state:
        type: string
      taskDefinitionId:
        type: string
    type: object
  main.Sort:
    properties:
      field:
        type: string
      order:
        type: string
    required:
    - field
    type: object
  main.SortSearchTasklist:
    properties:
      field:
        type: string
      order:
        type: string
    type: object
  main.StartInstruction:
    properties:
      elementId:
        type: string
    type: object
  main.UpdatePembuatanMediaBeritaTechnologyPayload:
    properties:
      variables:
        additionalProperties:
          type: string
        type: object
    type: object
  main.UpdatePostPayload:
    properties:
      content:
        maxLength: 1000
        type: string
      title:
        maxLength: 100
        type: string
    type: object
  main.UserWithToken:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      role:
        $ref: '#/definitions/store.Role'
      role_id:
        type: integer
      token:
        type: string
      username:
        type: string
    type: object
  main.Variable:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  store.Comment:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      post_id:
        type: integer
      user:
        $ref: '#/definitions/store.User'
      user_id:
        type: integer
    type: object
  store.PembuatanMediaBeritaTechnology:
    properties:
      created_at:
        type: string
      created_by:
        type: integer
      deleted_at:
        type: string
      id:
        type: integer
      process_definition_key:
        type: integer
      process_instance_key:
        type: integer
      resource_name:
        type: string
      task_definition_id:
        type: string
      task_state:
        type: string
      updated_at:
        type: string
      updated_by:
        type: integer
      version:
        type: integer
    type: object
  store.Post:
    properties:
      comments:
        items:
          $ref: '#/definitions/store.Comment'
        type: array
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/store.User'
      user_id:
        type: integer
      version:
        type: integer
    type: object
  store.Role:
    properties:
      description:
        type: string
      id:
        type: integer
      level:
        type: integer
      name:
        type: string
    type: object
  store.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      role:
        $ref: '#/definitions/store.Role'
      role_id:
        type: integer
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for damarmunda, a camunda golang
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: damarmunda API
paths:
  /authentication/token:
    post:
      consumes:
      - application/json
      description: Create a token for user
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CreateUserTokenPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Token
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create a token
      tags:
      - authentication
  /authentication/user:
    get:
      consumes:
      - application/json
      description: Get user from token
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/main.DataStoreUserWrapper'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get user from token
      tags:
      - authentication
    post:
      consumes:
      - application/json
      description: Register a user
      parameters:
      - description: User credentials
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.RegisterUserPayload'
      produces:
      - application/json
      responses:
        "201":
          description: User registered
          schema:
            $ref: '#/definitions/main.UserWithToken'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Register a user
      tags:
      - authentication
  /bpmn/pembuatan_media_berita_technology:
    get:
      consumes:
      - application/json
      description: Search PembuatanMediaBeritaTechnology
      parameters:
      - description: Limit 20
        in: query
        name: limit
        required: true
        type: string
      - description: Page 1
        in: query
        name: page
        required: true
        type: string
      - description: Search string
        in: query
        name: search
        type: string
      - description: Sort desc
        in: query
        name: sort
        type: string
      - description: Since desc
        in: query
        name: since
        type: string
      - description: Until desc
        in: query
        name: until
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PembuatanMediaBeritaTechnology Search
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Search PembuatanMediaBeritaTechnology
      tags:
      - bpmn/PembuatanMediaBeritaTechnology
    post:
      consumes:
      - application/json
      description: Create PembuatanMediaBeritaTechnology
      parameters:
      - description: PembuatanMediaBeritaTechnology Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CreatePembuatanMediaBeritaTechnologyPayload'
      produces:
      - application/json
      responses:
        "201":
          description: PembuatanMediaBeritaTechnology Created
          schema:
            $ref: '#/definitions/main.DataStorePembuatanMediaBeritaTechnologyWrapper'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Create PembuatanMediaBeritaTechnology
      tags:
      - bpmn/PembuatanMediaBeritaTechnology
  /bpmn/pembuatan_media_berita_technology/{id}:
    delete:
      consumes:
      - application/json
      description: Cancel PembuatanMediaBeritaTechnology
      parameters:
      - description: ProcessInstanceKey
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: PembuatanMediaBeritaTechnology Canceled
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Cancel PembuatanMediaBeritaTechnology
      tags:
      - bpmn/PembuatanMediaBeritaTechnology
    get:
      consumes:
      - application/json
      description: GetById PembuatanMediaBeritaTechnology
      parameters:
      - description: ID from table
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: PembuatanMediaBeritaTechnology GetById
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: GetById PembuatanMediaBeritaTechnology
      tags:
      - bpmn/PembuatanMediaBeritaTechnology
    patch:
      consumes:
      - application/json
      description: Update PembuatanMediaBeritaTechnology
      parameters:
      - description: ID from table
        in: path
        name: id
        required: true
        type: integer
      - description: PembuatanMediaBeritaTechnology Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.UpdatePembuatanMediaBeritaTechnologyPayload'
      produces:
      - application/json
      responses:
        "200":
          description: PembuatanMediaBeritaTechnology Updated
          schema:
            $ref: '#/definitions/main.DataStorePembuatanMediaBeritaTechnologyWrapper'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Update PembuatanMediaBeritaTechnology
      tags:
      - bpmn/PembuatanMediaBeritaTechnology
  /bpmn/pembuatan_media_berita_technology/{id}/history:
    get:
      consumes:
      - application/json
      description: GetHistoryById PembuatanMediaBeritaTechnology
      parameters:
      - description: ID from table
        in: path
        name: id
        required: true
        type: integer
      - description: Size 50
        in: query
        name: size
        type: string
      - description: Order DESC ASC
        in: query
        name: order
        type: string
      - description: Type USER_TASK
        in: query
        name: type
        type: string
      - description: State ACTIVE
        in: query
        name: state
        type: string
      - description: Sort startDate
        in: query
        name: sort
        type: string
      - description: SearchAfter 1731486859777,2251799814109407
        in: query
        name: searchAfter
        type: string
      - description: SearchBefore 1731486859777,2251799814109407
        in: query
        name: searchBefore
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PembuatanMediaBeritaTechnology GetHistoryById
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: GetHistoryById PembuatanMediaBeritaTechnology
      tags:
      - bpmn/PembuatanMediaBeritaTechnology
  /bpmn/pembuatan_media_berita_technology/{id}/incidents:
    get:
      consumes:
      - application/json
      description: GetProcessIncidents PembuatanMediaBeritaTechnology
      parameters:
      - description: ID from table
        in: path
        name: id
        required: true
        type: integer
      - description: Size 50
        in: query
        name: size
        type: string
      - description: Order DESC ASC
        in: query
        name: order
        type: string
      - description: Type USER_TASK
        in: query
        name: type
        type: string
      - description: State ACTIVE
        in: query
        name: state
        type: string
      - description: Sort startDate
        in: query
        name: sort
        type: string
      - description: SearchAfter 1731486859777,2251799814109407
        in: query
        name: searchAfter
        type: string
      - description: SearchBefore 1731486859777,2251799814109407
        in: query
        name: searchBefore
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PembuatanMediaBeritaTechnology GetProcessIncidents
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: GetProcessIncidents PembuatanMediaBeritaTechnology
      tags:
      - bpmn/PembuatanMediaBeritaTechnology
  /bpmn/pembuatanartikel/search:
    get:
      consumes:
      - application/json
      description: GetUserTaskActive PembuatanArtikel
      parameters:
      - description: Size 50
        in: query
        name: size
        type: string
      - description: Order DESC ASC
        in: query
        name: order
        type: string
      - description: Sort creationTime
        in: query
        name: sort
        type: string
      - description: State CREATED
        in: query
        name: state
        type: string
      - description: SearchAfter 1731486859777,2251799814109407
        in: query
        name: searchAfter
        type: string
      - description: SearchBefore 1731486859777,2251799814109407
        in: query
        name: searchBefore
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: PembuatanArtikel GetUserTaskActive
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: GetUserTaskActive PembuatanArtikel
      tags:
      - bpmn/PembuatanArtikel
  /camunda/incident/{incidentKey}/resolve:
    post:
      consumes:
      - application/json
      description: Resolve Incident Bpmn Camunda
      parameters:
      - description: incidentKey
        in: path
        name: incidentKey
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Resolve Incident Bpmn Camunda
      tags:
      - camunda/incident
  /camunda/process-instance:
    get:
      consumes:
      - application/json
      description: Get Proses Instance from rest api
      parameters:
      - description: Size 50
        in: query
        name: size
        type: string
      - description: SearchAfter 1731486859777,2251799814109407
        in: query
        name: searchAfter
        type: string
      - description: SearchBefore 1731486859777,2251799814109407
        in: query
        name: searchBefore
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: search process instance
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get Proses Instance from rest api
      tags:
      - camunda/process-instance
    post:
      consumes:
      - application/json
      description: Create Proses Instance from rest api
      parameters:
      - description: Create Proses Instance Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CreateProcessInstancePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.CreateProcessInstancesResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Create Proses Instance from rest api
      tags:
      - camunda/process-instance
  /camunda/process-instance/{processinstanceKey}/cancel:
    post:
      consumes:
      - application/json
      description: Cancel Proses Instance from rest api
      parameters:
      - description: processinstanceskey
        in: path
        name: processinstanceKey
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Cancel Proses Instance from rest api
      tags:
      - camunda/process-instance
  /camunda/resource/{processDefinitionKey}/delete:
    delete:
      consumes:
      - application/json
      description: Delete Bpmn Camunda
      parameters:
      - description: Process Definition Key
        in: path
        name: processDefinitionKey
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Delete Bpmn Camunda
      tags:
      - camunda/resource
  /camunda/resource/{processDefinitionKey}/xml:
    get:
      consumes:
      - application/json
      description: Get TEXT/XML from rest api
      parameters:
      - description: Process Definition Key
        in: path
        name: processDefinitionKey
        required: true
        type: integer
      produces:
      - text/xml
      responses:
        "200":
          description: search process instance
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get TEXT/XML from rest api
      tags:
      - camunda/resource
  /camunda/resource/crud:
    post:
      consumes:
      - application/json
      description: CRUD Store And Handler from Payload
      parameters:
      - description: Crud Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CrudPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: CRUD Store And Handler
      tags:
      - camunda/resource
  /camunda/resource/deploy:
    post:
      consumes:
      - application/json
      description: Deploy Only Bpmn Camunda by Name In Folder Resources
      parameters:
      - description: Deploy Bpmn Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.DeployBpmnPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Deploy Only Bpmn Camunda
      tags:
      - camunda/resource
  /camunda/resource/deploy-crud:
    post:
      consumes:
      - application/json
      description: Deploy Bpmn Camunda by Name In Folder Resources And Create CRUD
        in Store And Handler File
      parameters:
      - description: Deploy Bpmn Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.DeployBpmnPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Deploy Bpmn Camunda and Create CRUD in Store And Handler File
      tags:
      - camunda/resource
  /camunda/resource/operate/statistics:
    get:
      consumes:
      - application/json
      description: Get Information operate statistics camunda from rest api
      produces:
      - application/json
      responses:
        "200":
          description: search process instance
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Get Information operate statistics camunda from rest api
      tags:
      - camunda/resource
  /camunda/user-task:
    post:
      consumes:
      - application/json
      description: Search TaskList from rest api v1
      parameters:
      - description: Search TaskList Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.SearchTaskListPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.SearchTaskListPayload'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Search TaskList from rest api v1
      tags:
      - camunda/user-task
  /camunda/user-task/search:
    post:
      consumes:
      - application/json
      description: Search User Task from rest api v2 must enabled in camunda-platform
        config first
      parameters:
      - description: Query User Task Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.QueryUserTaskPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.QueryUserTaskPayload'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Search User Task from rest api v2 must enabled in camunda-platform
        config first
      tags:
      - camunda/user-task
  /health:
    get:
      consumes:
      - application/json
      description: Fetches health status api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.HealthResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - BasicAuth: []
      summary: Fetches health status api
      tags:
      - health
  /posts:
    post:
      consumes:
      - application/json
      description: Create Post
      parameters:
      - description: Post Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CreatePostPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Post Created
          schema:
            $ref: '#/definitions/main.DataStorePostWrapper'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Create Post
      tags:
      - posts
  /posts/{postID}:
    delete:
      consumes:
      - application/json
      description: DELETE Post By ID
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: post not found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: DELETE Post By ID
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: GET Post By ID
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Post Created
          schema:
            $ref: '#/definitions/store.Post'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: post not found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: GET Post By ID
      tags:
      - posts
    patch:
      consumes:
      - application/json
      description: PATCH Post By ID
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      - description: Post payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.UpdatePostPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Post'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: post not found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: PATCH Post By ID
      tags:
      - posts
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Fetches a user profile by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.DataStoreUserWrapper'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Fetches a user profile
      tags:
      - users
  /users/{userID}/follow:
    put:
      consumes:
      - application/json
      description: Follow a user by ID
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User followed
          schema:
            type: string
        "400":
          description: User payload missing
          schema: {}
        "404":
          description: User not found
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: Follow a user
      tags:
      - users
  /users/{userID}/unfollow:
    put:
      consumes:
      - application/json
      description: UnFollow a user by ID
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User unfollowed
          schema:
            type: string
        "400":
          description: User payload missing
          schema: {}
        "404":
          description: User not found
          schema: {}
      security:
      - ApiKeyAuth: []
      summary: UnFollow a user
      tags:
      - users
  /users/activate/{token}:
    put:
      description: Activate a user
      parameters:
      - description: Invitation token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: User activated
          schema:
            type: string
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Activate a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
