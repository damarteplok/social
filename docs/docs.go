// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/authentication/token": {
            "post": {
                "description": "Create a token for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Create a token",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateUserTokenPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/authentication/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user from token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get user from token",
                "responses": {
                    "200": {
                        "description": "User",
                        "schema": {
                            "$ref": "#/definitions/main.DataStoreUserWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Register a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Register a user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RegisterUserPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered",
                        "schema": {
                            "$ref": "#/definitions/main.UserWithToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/bpmn/pembuatan_media_berita_technology": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search PembuatanMediaBeritaTechnology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bpmn/PembuatanMediaBeritaTechnology"
                ],
                "summary": "Search PembuatanMediaBeritaTechnology",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Limit 20",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page 1",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort desc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Since desc",
                        "name": "since",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Until desc",
                        "name": "until",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PembuatanMediaBeritaTechnology Search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create PembuatanMediaBeritaTechnology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bpmn/PembuatanMediaBeritaTechnology"
                ],
                "summary": "Create PembuatanMediaBeritaTechnology",
                "parameters": [
                    {
                        "description": "PembuatanMediaBeritaTechnology Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreatePembuatanMediaBeritaTechnologyPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "PembuatanMediaBeritaTechnology Created",
                        "schema": {
                            "$ref": "#/definitions/main.DataStorePembuatanMediaBeritaTechnologyWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/bpmn/pembuatan_media_berita_technology/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetById PembuatanMediaBeritaTechnology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bpmn/PembuatanMediaBeritaTechnology"
                ],
                "summary": "GetById PembuatanMediaBeritaTechnology",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID from table",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PembuatanMediaBeritaTechnology GetById",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cancel PembuatanMediaBeritaTechnology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bpmn/PembuatanMediaBeritaTechnology"
                ],
                "summary": "Cancel PembuatanMediaBeritaTechnology",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ProcessInstanceKey",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PembuatanMediaBeritaTechnology Canceled",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update PembuatanMediaBeritaTechnology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bpmn/PembuatanMediaBeritaTechnology"
                ],
                "summary": "Update PembuatanMediaBeritaTechnology",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID from table",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PembuatanMediaBeritaTechnology Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdatePembuatanMediaBeritaTechnologyPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PembuatanMediaBeritaTechnology Updated",
                        "schema": {
                            "$ref": "#/definitions/main.DataStorePembuatanMediaBeritaTechnologyWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/bpmn/pembuatan_media_berita_technology/{id}/history": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetHistoryById PembuatanMediaBeritaTechnology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bpmn/PembuatanMediaBeritaTechnology"
                ],
                "summary": "GetHistoryById PembuatanMediaBeritaTechnology",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID from table",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Size 50",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order DESC ASC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type USER_TASK",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "State ACTIVE",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort startDate",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SearchAfter 1731486859777,2251799814109407",
                        "name": "searchAfter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SearchBefore 1731486859777,2251799814109407",
                        "name": "searchBefore",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PembuatanMediaBeritaTechnology GetHistoryById",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/bpmn/pembuatan_media_berita_technology/{id}/incidents": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetProcessIncidents PembuatanMediaBeritaTechnology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bpmn/PembuatanMediaBeritaTechnology"
                ],
                "summary": "GetProcessIncidents PembuatanMediaBeritaTechnology",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID from table",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Size 50",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order DESC ASC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type USER_TASK",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "State ACTIVE",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort startDate",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SearchAfter 1731486859777,2251799814109407",
                        "name": "searchAfter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SearchBefore 1731486859777,2251799814109407",
                        "name": "searchBefore",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PembuatanMediaBeritaTechnology GetProcessIncidents",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/bpmn/pembuatanartikel/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GetUserTaskActive PembuatanArtikel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bpmn/PembuatanArtikel"
                ],
                "summary": "GetUserTaskActive PembuatanArtikel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Size 50",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order DESC ASC",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort creationTime",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "State CREATED",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SearchAfter 1731486859777,2251799814109407",
                        "name": "searchAfter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SearchBefore 1731486859777,2251799814109407",
                        "name": "searchBefore",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PembuatanArtikel GetUserTaskActive",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/incident/{incidentKey}/resolve": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Resolve Incident Bpmn Camunda",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/incident"
                ],
                "summary": "Resolve Incident Bpmn Camunda",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "incidentKey",
                        "name": "incidentKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/minio/deploy-crud": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deploy Bpmn Camunda by Name From MINIO And Create CRUD in Store And Handler File",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/minio"
                ],
                "summary": "Deploy Bpmn Camunda and Create CRUD in Store And Handler File",
                "parameters": [
                    {
                        "description": "Deploy Bpmn Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.DeployBpmnPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/minio/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload Bpmn Camunda by Name In Folder Resources",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/minio"
                ],
                "summary": "Upload Bpmn Camunda",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File Upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/minio/upload-multiple": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload Multiple Bpmn Camunda by Name In Folder Resources",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/minio"
                ],
                "summary": "Upload Multiple Bpmn Camunda",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Files Upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/process-instance": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Proses Instance from rest api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/process-instance"
                ],
                "summary": "Get Proses Instance from rest api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bpmn Process Id",
                        "name": "bpmnProcessId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Process Definition Key",
                        "name": "processDefinitionKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Parent Process Instance Key",
                        "name": "parentProcessInstanceKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "State",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Size 50",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SearchAfter 1731486859777,2251799814109407",
                        "name": "searchAfter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "SearchBefore 1731486859777,2251799814109407",
                        "name": "searchBefore",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search process instance",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Proses Instance from rest api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/process-instance"
                ],
                "summary": "Create Proses Instance from rest api",
                "parameters": [
                    {
                        "description": "Create Proses Instance Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateProcessInstancePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.CreateProcessInstancesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/process-instance/{processinstanceKey}/cancel": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cancel Proses Instance from rest api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/process-instance"
                ],
                "summary": "Cancel Proses Instance from rest api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "processinstanceskey",
                        "name": "processinstanceKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/resource/crud": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "CRUD Store And Handler from Payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/resource"
                ],
                "summary": "CRUD Store And Handler",
                "parameters": [
                    {
                        "description": "Crud Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CrudPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/resource/deploy": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deploy Only Bpmn Camunda by Name In Folder Resources",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/resource"
                ],
                "summary": "Deploy Only Bpmn Camunda",
                "parameters": [
                    {
                        "description": "Deploy Bpmn Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.DeployBpmnPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/resource/deploy-crud": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deploy Bpmn Camunda by Name In Folder Resources And Create CRUD in Store And Handler File",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/resource"
                ],
                "summary": "Deploy Bpmn Camunda and Create CRUD in Store And Handler File",
                "parameters": [
                    {
                        "description": "Deploy Bpmn Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.DeployBpmnPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/resource/operate/statistics": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Information operate statistics camunda from rest api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/resource"
                ],
                "summary": "Get Information operate statistics camunda from rest api",
                "responses": {
                    "200": {
                        "description": "search process instance",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/resource/{processDefinitionKey}/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete Bpmn Camunda",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/resource"
                ],
                "summary": "Delete Bpmn Camunda",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Process Definition Key",
                        "name": "processDefinitionKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/resource/{processDefinitionKey}/xml": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get TEXT/XML from rest api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/xml"
                ],
                "tags": [
                    "camunda/resource"
                ],
                "summary": "Get TEXT/XML from rest api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Process Definition Key",
                        "name": "processDefinitionKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search process instance",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/user-task": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search TaskList from rest api v1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/user-task"
                ],
                "summary": "Search TaskList from rest api v1",
                "parameters": [
                    {
                        "description": "Search TaskList Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.SearchTaskListPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.SearchTaskListPayload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/camunda/user-task/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search User Task from rest api v2 must enabled in camunda-platform config first",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "camunda/user-task"
                ],
                "summary": "Search User Task from rest api v2 must enabled in camunda-platform config first",
                "parameters": [
                    {
                        "description": "Query User Task Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.QueryUserTaskPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.QueryUserTaskPayload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/health": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Fetches health status api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Fetches health status api",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.HealthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/posts": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Create Post",
                "parameters": [
                    {
                        "description": "Post Payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreatePostPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post Created",
                        "schema": {
                            "$ref": "#/definitions/main.DataStorePostWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/posts/{postID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "GET Post By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "GET Post By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Post Created",
                        "schema": {
                            "$ref": "#/definitions/store.Post"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "post not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "DELETE Post By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "DELETE Post By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "post not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "PATCH Post By ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "PATCH Post By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Post ID",
                        "name": "postID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Post payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.UpdatePostPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/store.Post"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "post not found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/users/activate/{token}": {
            "put": {
                "description": "Activate a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Activate a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invitation token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User activated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches a user profile by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Fetches a user profile",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.DataStoreUserWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/users/{userID}/follow": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Follow a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Follow a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User followed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "User payload missing",
                        "schema": {}
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {}
                    }
                }
            }
        },
        "/users/{userID}/unfollow": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "UnFollow a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "UnFollow a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User unfollowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "User payload missing",
                        "schema": {}
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "main.CreatePembuatanMediaBeritaTechnologyPayload": {
            "type": "object",
            "properties": {
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "main.CreatePostPayload": {
            "type": "object",
            "required": [
                "content",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 1000
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "main.CreateProcessInstancePayload": {
            "type": "object",
            "required": [
                "processDefinitionKey"
            ],
            "properties": {
                "awaitCompletion": {
                    "type": "boolean"
                },
                "fetchVariables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "operationReference": {
                    "type": "integer"
                },
                "processDefinitionKey": {
                    "type": "integer"
                },
                "requestTimeout": {
                    "type": "integer"
                },
                "startInstructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.StartInstruction"
                    }
                },
                "tenantId": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "main.CreateProcessInstancesResponse": {
            "type": "object",
            "properties": {
                "processDefinitionId": {
                    "type": "string"
                },
                "processDefinitionKey": {
                    "type": "integer"
                },
                "processDefinitionVersion": {
                    "type": "integer"
                },
                "processInstanceKey": {
                    "type": "integer"
                },
                "tenantId": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "main.CreateUserTokenPayload": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 3
                }
            }
        },
        "main.CrudPayload": {
            "type": "object",
            "required": [
                "process_definition_key",
                "process_name",
                "resource_name",
                "version"
            ],
            "properties": {
                "process_definition_key": {
                    "type": "integer"
                },
                "process_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "resource_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "main.DataStorePembuatanMediaBeritaTechnologyWrapper": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/store.PembuatanMediaBeritaTechnology"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "main.DataStorePostWrapper": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/store.Post"
                }
            }
        },
        "main.DataStoreUserWrapper": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/store.User"
                }
            }
        },
        "main.DeployBpmnPayload": {
            "type": "object",
            "required": [
                "resource_name"
            ],
            "properties": {
                "form_resources": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "type": "string"
                    }
                },
                "resource_name": {
                    "type": "string"
                }
            }
        },
        "main.Filter": {
            "type": "object",
            "properties": {
                "assignee": {
                    "type": "string"
                },
                "candidateGroup": {
                    "type": "string"
                },
                "candidateUser": {
                    "type": "string"
                },
                "elementId": {
                    "type": "string"
                },
                "key": {
                    "type": "integer"
                },
                "processDefinitionId": {
                    "type": "string"
                },
                "processDefinitionKey": {
                    "type": "integer"
                },
                "processInstanceKey": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "tenantIds": {
                    "type": "string"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Variable"
                    }
                }
            }
        },
        "main.HealthResponse": {
            "type": "object",
            "properties": {
                "env": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "main.Page": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "searchAfter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.SearchAfterPayload"
                    }
                },
                "searchBefore": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.SearchAfterPayload"
                    }
                }
            }
        },
        "main.QueryUserTaskPayload": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/main.Filter"
                },
                "page": {
                    "$ref": "#/definitions/main.Page"
                },
                "sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Sort"
                    }
                }
            }
        },
        "main.RegisterUserPayload": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 3
                },
                "username": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "main.SearchAfterPayload": {
            "type": "object",
            "properties": {
                "object": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "main.SearchTaskListPayload": {
            "type": "object",
            "properties": {
                "assgined": {
                    "type": "boolean"
                },
                "assignee": {
                    "type": "string"
                },
                "assignees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "candidateGroup": {
                    "type": "string"
                },
                "candidateGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "candidateUser": {
                    "type": "string"
                },
                "candidateUsers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pageSize": {
                    "type": "integer"
                },
                "processDefinitionKey": {
                    "type": "string"
                },
                "processInstanceKey": {
                    "type": "string"
                },
                "searchAfter": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "searchAfterOrEqual": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "searchBefore": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "searchBeforeOrEqual": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sort": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.SortSearchTasklist"
                    }
                },
                "state": {
                    "type": "string"
                },
                "taskDefinitionId": {
                    "type": "string"
                }
            }
        },
        "main.Sort": {
            "type": "object",
            "required": [
                "field"
            ],
            "properties": {
                "field": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            }
        },
        "main.SortSearchTasklist": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "order": {
                    "type": "string"
                }
            }
        },
        "main.StartInstruction": {
            "type": "object",
            "properties": {
                "elementId": {
                    "type": "string"
                }
            }
        },
        "main.UpdatePembuatanMediaBeritaTechnologyPayload": {
            "type": "object",
            "properties": {
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "main.UpdatePostPayload": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 1000
                },
                "title": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "main.UserWithToken": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "role": {
                    "$ref": "#/definitions/store.Role"
                },
                "role_id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "main.Variable": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "store.Comment": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "post_id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/store.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "store.PembuatanMediaBeritaTechnology": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "process_definition_key": {
                    "type": "integer"
                },
                "process_instance_key": {
                    "type": "integer"
                },
                "resource_name": {
                    "type": "string"
                },
                "task_definition_id": {
                    "type": "string"
                },
                "task_state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "store.Post": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/store.Comment"
                    }
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/store.User"
                },
                "user_id": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "store.Role": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "store.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "role": {
                    "$ref": "#/definitions/store.Role"
                },
                "role_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "damarmunda API",
	Description:      "API for damarmunda, a camunda golang",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
